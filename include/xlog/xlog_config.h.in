/**
 * WARNING:
 *   This file is autogenerated from config.h.in during the cmake configuration
 *   of your project. If you need to make changes in your configuration,
 *   edit the original file but NOT THIS FILE.
 */

#ifndef __XLOG_CONFIG_H
#define __XLOG_CONFIG_H

#include <stdarg.h>
#include <stdlib.h>
#include <stdint.h>
#include <stddef.h>
#include <string.h>
#include <stdio.h>
#include <stdbool.h>
#include <inttypes.h>
#include <errno.h>
#include <assert.h>
#include <fcntl.h>
#include <ctype.h>
#include <pthread.h>
#include <err.h>
#include <unistd.h>
#include <time.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <fcntl.h>

/** check the size of primitive types */
#define BITS_PER_LONG @BITS_PER_LONG@


/** assert and debug */
#define XLOG_ASSERT(cond)			assert(cond)

/** function: set/get thread name */
#if (defined __linux__)
#include <sys/prctl.h>
#define XLOG_LIMIT_THREAD_NAME		16
#define XLOG_SET_THREAD_NAME(name)	prctl(PR_SET_NAME, name, 0, 0, 0)
#define XLOG_GET_THREAD_NAME(name)	prctl(PR_GET_NAME, name)
#elif (defined __unix__)
#include <pthread.h>
#define XLOG_LIMIT_THREAD_NAME		16
#define XLOG_SET_THREAD_NAME(name)	pthread_setname_np( pthread_self(), name )
#define XLOG_GET_THREAD_NAME(name)	pthread_getname_np( pthread_self(), name, XLOG_LIMIT_THREAD_NAME )
#elif (defined __FreeBSD__)
#include <pthread.h>
#define XLOG_LIMIT_THREAD_NAME		16
#define XLOG_SET_THREAD_NAME(name)	pthread_setname_np( pthread_self(), name )
#define XLOG_GET_THREAD_NAME(name)
#elif (defined __OpenBSD__)
#include <pthread.h>
#define XLOG_LIMIT_THREAD_NAME		16
#define XLOG_SET_THREAD_NAME(name)	pthread_setname_np( pthread_self(), name )
#define XLOG_GET_THREAD_NAME(name)
#elif (defined __NetBSD__)
#include <pthread.h>
#define XLOG_LIMIT_THREAD_NAME		16
#define XLOG_SET_THREAD_NAME(name)	pthread_setname_np( pthread_self(), name, NULL )
#define XLOG_GET_THREAD_NAME(name)
#elif (defined __APPLE__)
#include <pthread.h>
#define XLOG_LIMIT_THREAD_NAME		16
#define XLOG_SET_THREAD_NAME(name)	pthread_setname_np( name )
#define XLOG_GET_THREAD_NAME(name)	pthread_getname_np( pthread_self(), name, XLOG_LIMIT_THREAD_NAME )
#else
#error No implementation for this system.
#endif


/** xlog limit */
#define XLOG_LIMIT_LEVEL_FACTORY		XLOG_LEVEL_VERBOSE
#define XLOG_LIMIT_MODULE_PATH			128
#define XLOG_LIMIT_NODE_PATH			256


/** xlog styles configuration */
#define XLOG_STYLE_NEWLINE				"\r\n"


/** xlog default runtime parameters */
#define XLOG_DEFAULT_PAYLOAD_SIZE		1024


/** xlog features configuration */
/* colorful logging */
#cmakedefine XLOG_FEATURE_ENABLE_COLOR

/* logging stats */
#cmakedefine XLOG_FEATURE_ENABLE_STATS
#cmakedefine XLOG_FEATURE_ENABLE_STATS_PRINTER
#cmakedefine XLOG_FEATURE_ENABLE_STATS_MODULE

/* auto create default context */
#cmakedefine XLOG_FEATURE_ENABLE_DEFAULT_CONTEXT

/* use default stdio printer if given pointer to printer is NULL */
#cmakedefine XLOG_FEATURE_ENABLE_DEFAULT_PRINTER

/* replace vsnprintf */
#cmakedefine XLOG_FEATURE_REPLACE_VSNPRINTF


/** xlog policies configurations */
#cmakedefine XLOG_POLICY_ENABLE_RUNTIME_SAFE

/** bench configurations */
#cmakedefine XLOG_BENCH_NO_OUTPUT

/** default log format for specified level */
#define XLOG_FORMAT_OALL	 		(XLOG_FORMAT_OTIME | XLOG_FORMAT_OTASK | XLOG_FORMAT_OLEVEL | XLOG_FORMAT_OMODULE | XLOG_FORMAT_OFILE | XLOG_FORMAT_OFUNC | XLOG_FORMAT_OLINE)
#define XLOG_DEFAULT_FORMAT_FATAL	(XLOG_FORMAT_OTIME | XLOG_FORMAT_OLEVEL)
#define XLOG_DEFAULT_FORMAT_ERROR	(XLOG_FORMAT_OTIME | XLOG_FORMAT_OLEVEL)
#define XLOG_DEFAULT_FORMAT_WARN	(XLOG_FORMAT_OTIME | XLOG_FORMAT_OLEVEL | XLOG_FORMAT_OMODULE)
#define XLOG_DEFAULT_FORMAT_INFO	(XLOG_FORMAT_OTIME | XLOG_FORMAT_OLEVEL | XLOG_FORMAT_OMODULE)
#define XLOG_DEFAULT_FORMAT_DEBUG	(XLOG_FORMAT_OTIME | XLOG_FORMAT_OLEVEL | XLOG_FORMAT_OMODULE | XLOG_FORMAT_OFILE | XLOG_FORMAT_OFUNC | XLOG_FORMAT_OLINE)
#define XLOG_DEFAULT_FORMAT_VERBOSE	(XLOG_FORMAT_OTIME | XLOG_FORMAT_OTASK | XLOG_FORMAT_OLEVEL | XLOG_FORMAT_OMODULE | XLOG_FORMAT_OFILE | XLOG_FORMAT_OFUNC | XLOG_FORMAT_OLINE)

/** xlog tags, prefixs, suffixs(stable) */
#define XLOG_TAG_LEVEL_FATAL			"F"
#define XLOG_TAG_LEVEL_ERROR			"E"
#define XLOG_TAG_LEVEL_WARN				"W"
#define XLOG_TAG_LEVEL_INFO				"I"
#define XLOG_TAG_LEVEL_DEBUG			"D"
#define XLOG_TAG_LEVEL_VERBOSE			"V"

/* Non-format prefix & suffix */
/* prefix and suffix for log-time */
#define XLOG_TAG_PREFIX_LOG_TIME_NONE			""
#define XLOG_TAG_SUFFIX_LOG_TIME_NONE			" "
/* prefix and suffix for log-task */
#define XLOG_TAG_PREFIX_LOG_TASK_NONE			"["
#define XLOG_TAG_SUFFIX_LOG_TASK_NONE			"] "
/* prefix and suffix for log-class */
#define XLOG_TAG_PREFIX_LOG_CLASS_NONE(LEVEL)	"[" XLOG_TAG_LEVEL_##LEVEL
#define XLOG_TAG_SUFFIX_LOG_CLASS_NONE(LEVEL)	"] "
/* prefix and suffix for log-point */
#define XLOG_TAG_PREFIX_LOG_POINT_NONE			"("
#define XLOG_TAG_SUFFIX_LOG_POINT_NONE			") "
/* prefix and suffix for log-body */
#define XLOG_TAG_PREFIX_LOG_BODY_NONE(LEVEL)	""
#define XLOG_TAG_SUFFIX_LOG_BODY_NONE(LEVEL)	""

/* CSI-based prefix & suffix */
#define XLOG_DEFAULT_COLOR_FATAL_CSI			"38;2;255;0;0;1m"
#define XLOG_DEFAULT_COLOR_ERROR_CSI			"38;2;255;0;0;1m"
#define XLOG_DEFAULT_COLOR_WARN_CSI				"38;2;255;199;6;1m"
#define XLOG_DEFAULT_COLOR_INFO_CSI				"38;2;85;255;255m"
#define XLOG_DEFAULT_COLOR_DEBUG_CSI			"1m"
#define XLOG_DEFAULT_COLOR_VERBOSE_CSI			"0m"

/* prefix and suffix for log-time */
#define XLOG_TAG_PREFIX_LOG_TIME_CSI			"\033[2;3m"
#define XLOG_TAG_SUFFIX_LOG_TIME_CSI			"\033[0m "
/* prefix and suffix for log-task */
#define XLOG_TAG_PREFIX_LOG_TASK_CSI			"["
#define XLOG_TAG_SUFFIX_LOG_TASK_CSI			"\033[0m] "
/* prefix and suffix for log-class */
#define XLOG_TAG_PREFIX_LOG_CLASS_CSI(LEVEL)	"[\033[" XLOG_DEFAULT_COLOR_##LEVEL##_CSI XLOG_TAG_LEVEL_##LEVEL
#define XLOG_TAG_SUFFIX_LOG_CLASS_CSI(LEVEL)	"\033[0m] "
/* prefix and suffix for log-point */
#define XLOG_TAG_PREFIX_LOG_POINT_CSI			"("
#define XLOG_TAG_SUFFIX_LOG_POINT_CSI			") "
/* prefix and suffix for log-body */
#define XLOG_TAG_PREFIX_LOG_BODY_CSI(LEVEL)		"\033[" XLOG_DEFAULT_COLOR_##LEVEL##_CSI
#define XLOG_TAG_SUFFIX_LOG_BODY_CSI(LEVEL)		"\033[0m"


#if !(defined XLOG_FEATURE_ENABLE_COLOR)

/* prefix and suffix for log-time */
#define XLOG_TAG_PREFIX_LOG_TIME			XLOG_TAG_PREFIX_LOG_TIME_NONE
#define XLOG_TAG_SUFFIX_LOG_TIME			XLOG_TAG_SUFFIX_LOG_TIME_NONE
/* prefix and suffix for log-task */
#define XLOG_TAG_PREFIX_LOG_TASK			XLOG_TAG_PREFIX_LOG_TASK_NONE
#define XLOG_TAG_SUFFIX_LOG_TASK			XLOG_TAG_SUFFIX_LOG_TASK_NONE
/* prefix and suffix for log-class */
#define XLOG_TAG_PREFIX_LOG_CLASS(LEVEL)	XLOG_TAG_PREFIX_LOG_CLASS_NONE(LEVEL)
#define XLOG_TAG_SUFFIX_LOG_CLASS(LEVEL)	XLOG_TAG_SUFFIX_LOG_CLASS_NONE(LEVEL)
/* prefix and suffix for log-point */
#define XLOG_TAG_PREFIX_LOG_POINT			XLOG_TAG_PREFIX_LOG_POINT_NONE
#define XLOG_TAG_SUFFIX_LOG_POINT			XLOG_TAG_SUFFIX_LOG_POINT_NONE
/* prefix and suffix for log-body */
#define XLOG_TAG_PREFIX_LOG_BODY(LEVEL)		XLOG_TAG_PREFIX_LOG_BODY_NONE(LEVEL)
#define XLOG_TAG_SUFFIX_LOG_BODY(LEVEL)		XLOG_TAG_SUFFIX_LOG_BODY_NONE(LEVEL)

#else

/* prefix and suffix for log-time */
#define XLOG_TAG_PREFIX_LOG_TIME			XLOG_TAG_PREFIX_LOG_TIME_CSI
#define XLOG_TAG_SUFFIX_LOG_TIME			XLOG_TAG_SUFFIX_LOG_TIME_CSI
/* prefix and suffix for log-task */
#define XLOG_TAG_PREFIX_LOG_TASK			XLOG_TAG_PREFIX_LOG_TASK_CSI
#define XLOG_TAG_SUFFIX_LOG_TASK			XLOG_TAG_SUFFIX_LOG_TASK_CSI
/* prefix and suffix for log-class */
#define XLOG_TAG_PREFIX_LOG_CLASS(LEVEL)	XLOG_TAG_PREFIX_LOG_CLASS_CSI(LEVEL)
#define XLOG_TAG_SUFFIX_LOG_CLASS(LEVEL)	XLOG_TAG_SUFFIX_LOG_CLASS_CSI(LEVEL)
/* prefix and suffix for log-point */
#define XLOG_TAG_PREFIX_LOG_POINT			XLOG_TAG_PREFIX_LOG_POINT_CSI
#define XLOG_TAG_SUFFIX_LOG_POINT			XLOG_TAG_SUFFIX_LOG_POINT_CSI
/* prefix and suffix for log-body */
#define XLOG_TAG_PREFIX_LOG_BODY(LEVEL)		XLOG_TAG_PREFIX_LOG_BODY_CSI(LEVEL)
#define XLOG_TAG_SUFFIX_LOG_BODY(LEVEL)		XLOG_TAG_SUFFIX_LOG_BODY_CSI(LEVEL)

#endif

#endif